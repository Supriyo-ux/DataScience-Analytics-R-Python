install.packages("E:/softwares/R/SDSFoundations_1.1.zip", repos = NULL, type = "win.binary")
library("SDSFoundations", lib.loc="~/R/win-library/3.4")
13+5
source('~/.active-rstudio-document')
a=13
a
remove(a)
y <- 1:10
y <- 1:10
x1 <- as.integer(2.00)
my.name <- as.integer(2.00)
my.number <- as.integer(readline(prompt = "Enter name:"))
for(i in c(1:nrow(my.number))){
my.number <- as.integer(readline(prompt = "Enter number:"))
}
install.packages("E:/softwares/R/SDSFoundations_1.1.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/user/Desktop/caret_6.0-82.zip", repos = NULL, type = "win.binary")
library(caret)
version
install.packages("tm")
install.packages("wordcloud")
install.packages("gmodels")
install.packages("e1071")
install.packages("rpart")
install.packages("rpart.plot")
install.packages("e1071")
install.packages("randomForest")
install.packages("animation")
install.packages("neuralnet")
install.packages("boot")
install.packages("plyr")
install.packages("matrixStats")
clr
clear
cls
library(swirl)
swirl()
0
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1<- Sys.time()
t1
class(t1)
t2 <- as.POSIXlt(Sys.time())
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
4
t4
class(t4)
Sys.time() - t1
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_list<- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, mean)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
a= 1:10
a
b= seq(2,10,length.out = 10)
b
c= c(rep("Supriyo",5),rep("Bittu",5))
matrix1= cbind(a,b,c)
matrix2=rbind(a,b,c)
View(matrix2)
View(matrix1)
View(matrix2)
data1= data.frame(a=a,b=b,c=c)
View(data1)
str(data1)
matrix1[4,3]
View(matrix2)
View(matrix1)
data1[,c(1,2)
data1[,c(1,2)]
data1[,c(1,2)]
data1[-c(6,7),]
data1$b
data1[data1$a>4]
data1[data1$a>4,]
write.csv(data1,"practice.csv")
data2= read.csv("practice.csv")
View(data2)
View(data1)
View(data2)
write.csv(data1,"practice.csv", row.names = FALSE)
data2= read.csv("practice.csv")
View(data2)
data3= as.data.frame(matrix2)
str(data3)
clr
data3= as.data.frame(matrix1)
str(data3)
fy <-rep(c(1999,1991,2001),3)
company <- c(rep("png",3),rep("hul",3),rep("marico",3))
revenue <- c(1123,1254,4561,1423,1568,12369,1587,12458,4578)
margin <- c(11,12,13,14,15,16,17,18,19)
Data <- data.frame(fy, company, revenue,margin)
install.packages("dplyr")
library(dplyr)
View(Data)
myresults <- Data %>% group_by(company) %>%  mutate(highestMargin= max(margin), lowestMargin= max(margin))
View(myresults)
View(Data)
myresults1 <- Data %>% group_by(fy) %>%  mutate(highestMargin= max(revenue), lowestMargin= max(revenue))
View(myresults1)
myresults1 <- Data %>% group_by(fy) %>%  summarise(highestMargin= max(revenue), lowestMargin= max(revenue))
Data$cost= Data$revenue*(100-Data$margin)/100
View(Data)
Data$costcat= ifelse(Data$cost> 10000, "High", ifelse(Data$cost>5000,"Medium", "Low"))
View(Data)
Data$avgmargin=ifelse(Data$margin>12, "HighProfit","Lowprofit")
View(Data)
for(i in 1:dim(Data)[1]){
Data$margin[i]=Data$margin[i]+i
}
View(Data)
for(i in 1:dim(Data)[1]){
Data$margin[i]=Data$margin[i]+i
}
View(Data)
a= 1:1000
a
Data <- data.frame(fy, company, revenue,margin)
View(Data)
dim(Data)
myresults <- Data %>% group_by(company) %>%  mutate(highestMargin= max(margin), lowestMargin= max(margin))
myresults <- Data %>% group_by(company) %>%  mutate(highestMargin= max(margin), lowestMargin= max(margin))
View(myresults)
for(i in 1:dim(Data)[1]){
Data$margin[i]=Data$margin[i]+i
}
View(Data)
myresults1 <- Data %>% group_by(company) %>%  summarise(bestMargin= max(margin))
View(myresults1)
fy <-rep(c(1999,1991,2001),3)
company <- c(rep("png",3),rep("hul",3),rep("marico",3))
revenue <- c(1123,1254,4561,1423,1568,12369,1587,12458,4578)
margin <- c(11,12,13,14,15,16,17,18,19)
Data <- data.frame(fy, company, revenue,margin)
Data$cost= Data$revenue*(100-Data$margin)/100
View(Data)
data2 <- aggregate(cbind(average_cost=costcat)+ company, Data)
Data$costcat= ifelse(Data$cost> 8000, "yes", ifelse(Data$cost<8000,"No"))
Data$costcat= ifelse(Data$cost> 8000, "yes", ifelse(Data$cost<8000,"no"))
Data$costcat= ifelse(Data$cost> 8000, "High", ifelse(Data$cost>5000,"Medium", "Low"))
View(Data)
Data$costcat= ifelse(Data$cost> 8000, "Yes", ifelse(Data$cost>5000,"No"))
Data$costcat= ifelse(Data$cost> 8000, "Yes", ifelse(Data$cost>5000,"No","Low"))
View(Data)
Data$costcat= ifelse(Data$cost> 8000, "Yes", ifelse(Data$cost>5000,"Low","No"))
View(Data)
Data$cost= Data$revenue*(100-Data$margin)/100
avg_cost <- Data %>% group_by(company) %>%  summarise(average_cost= mean(cost))
Data$avg_cost <- Data %>% group_by(company) %>%  summarise(average_cost= mean(cost))
View(Data)
fy <-rep(c(1999,1991,2001),3)
company <- c(rep("png",3),rep("hul",3),rep("marico",3))
revenue <- c(1123,1254,4561,1423,1568,12369,1587,12458,4578)
margin <- c(11,12,13,14,15,16,17,18,19)
Data <- data.frame(fy, company, revenue,margin)
Data$cost= Data$revenue*(100-Data$margin)/100
myresults <- Data %>% group_by(company) %>%  mutate(highestMargin= max(margin), lowestMargin= max(margin))
myresults <- Data %>% group_by(company) %>%  mutate(highestMargin= max(margin), lowestMargin= max(margin))
fy <-rep(c(1999,1991,2001),3)
company <- c(rep("png",3),rep("hul",3),rep("marico",3))
revenue <- c(1123,1254,4561,1423,1568,12369,1587,12458,4578)
margin <- c(11,12,13,14,15,16,17,18,19)
Data <- data.frame(fy, company, revenue,margin)
Data$cost= Data$revenue*(100-Data$margin)/100
View(Data)
myresults <- Data %>% group_by(company) %>%  mutate(highestMargin= max(margin), lowestMargin= max(margin))
library(dplyr)
myresults <- Data %>% group_by(company) %>%  mutate(highestMargin= max(margin), lowestMargin= max(margin))
View(myresults)
Data$avg_cost <- Data %>% group_by(company) %>%  summarise(average_cost= mean(cost))
avg_cost <- Data %>% group_by(company) %>%  summarise(average_cost= mean(cost))
View(avg_cost)
avg_cost$highcost=ifelse(avg_cost$average_cost>10000,"YES","NO")
a[1:2]
x=a[1:3]
matrix1[4,3]
growth.rate(x, lag = 3) == 100 * ((x[t]/x[t-3]) - 1) * (4/3)
growth= c(100,105,118,125,137)
growth= c(100,105,118,125,137)
growth_rate = growth %>%
# first sort by year
arrange(year) %>%
mutate(Diff_year = year - lag(year),  # Difference in time (just in case there are gaps)
Diff_growth = route - lag(route), # Difference in route between years
Rate_percent = (Diff_growth / Diff_year)/route * 100)
a= c(100,105,118,125,137)
a
a=x
agrowth_rate= function(x){
a=x
a= c(100,105,118,125,137)
growth_rate= function(x){
a=x
b= c(NA,a)
b=b[-length(b)]
g=(a-b)/b
g=mean(g,na.rm = TRUE)
return(g)
}
a= c(100,105,118,125,137)
growth_rate= function(x){
a=x
b= c(NA,a)
b=b[-length(b)]
g=(a-b)/b
g=mean(g,na.rm = TRUE)
return(g)
}
growth_rate(x)
a= c(100,105,118,125,137)
growth_rate= function(x){
a=x
b= c(NA,a)
b=b[-length(b)]
g=(a-b)/b
g=mean(g,na.rm = TRUE)
return(g)
}
growth_rate(x)
a= c(100,105,118,125,137)
growth_rate= function(x){
a=x
b= c(NA,a)
b=b[-length(b)]
g=(a-b)/b
g=mean(g,na.rm = TRUE)
return(g)
}
growth_rate(x)
a= c(100,105,118,125,137)
growth_rate= function(x){
a=x
b= c(NA,a)
b=b[-length(b)]
g=(a-b)/b
g=mean(g,na.rm = TRUE)
return(g)
}
growth_rate(a)
a= c(100,105,118,125,137)
View(growth_rate)
growth_rate(a)
library(MASS)
data()
library(dplyr)
library(data.table)
Data_USJUdgeRatings <- data.frame(USJudgeRatings)
View(Data_USJUdgeRatings)
setName<- setDT(Data_USJUdgeRatings,keep.rownames = TRUE)
View(setName)
setName<- setDT(Data_USJUdgeRatings,keep.rownames = TRUE)[]
class(Data_USJUdgeRatings)
local_USJUdgeRatings<-Data_USJUdgeRatings %>%  mutate(Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
View(local_USJUdgeRatings)
Sum_USJUdgeRatings<-Data_USJUdgeRatings %>%  summarise(Judge_Name=Data_USJUdgeRatings$rn,Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
Sum_USJUdgeRatings<-Data_USJUdgeRatings %>%  summarise(Judge=Data_USJUdgeRatings$rn,Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
Sum_USJUdgeRatings<-Data_USJUdgeRatings %>%  summarise(R=Data_USJUdgeRatings$rn,Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
Sum_USJUdgeRatings<-Data_USJUdgeRatings %>% group_by(Data_USJUdgeRatings)%>%  summarise(name=Data_USJUdgeRatings$rn,Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
library(dplyr)
Sum_USJUdgeRatings<-Data_USJUdgeRatings %>% group_by(Data_USJUdgeRatings)%>%  summarise(name=Data_USJUdgeRatings$rn,Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
Sum_USJUdgeRatings<-Data_USJUdgeRatings %>% group_by(Data_USJUdgeRatings)%>%  summarise(name=Data_USJUdgeRatings$rn,Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
local_USJUdgeRatings<-Data_USJUdgeRatings %>%  mutate(Average_Rating=apply(Data_USJUdgeRatings[,-1],1,mean,na.rm=TRUE),Std_Deviation=apply(Data_USJUdgeRatings[,-1],1,sd,na.rm=TRUE))
aids_data <- read.csv("Aids2.csv",header = T)
setwd("C:/Users/user/Desktop/data analytics")
aids_data <- read.csv("Aids2.csv",header = T)
aids_data_subset <- subset(aids_data,state != "Other")
aids_data_subset <- aids_data_subset %>% filter(!is.na(aids_data_subset$age))
aids_data_subset <- subset(aids_data,state != "Other")
aids_data_subset <- aids_data_subset %>% filter(!is.na(aids_data_subset$age))
aids_data_subset$agebracket<- ifelse(aids_data_subset$age<20,"0-20",
ifelse(aids_data_subset$age %in% c(20:40),
"20-40", ifelse(aids_data_subset$age %in% c(40:60),"40-60",">60")))
View(aids_data_subset)
aids_data_sort <- aids_data_subset[order(-aids_data_subset$diag, aids_data_subset$death)]
aids_data_sort <- aids_data_subset[order(-aids_data_subset$diag, aids_data_subset$death),]
View(aids_data)
View(aids_data_sort)
